---
- name: Check for PXE-booted system
  block:
    - name: Check if system is PXE-booted
      ansible.builtin.command:
        cmd: cat /proc/cmdline
      register: boot_cmdline
      changed_when: false
      check_mode: false

    - name: Set fact for PXE-booted system
      ansible.builtin.set_fact:
        is_pxe_booted: "{{ 'root=/dev/nfs' in boot_cmdline.stdout }}"
      when: boot_cmdline.stdout is defined

    - name: Include http_proxy configuration tasks
      ansible.builtin.include_tasks: http_proxy.yml

- name: Deploy K3s http_proxy conf
  ansible.builtin.include_tasks: http_proxy.yml
  when: proxy_env is defined

- name: Set kernel parameters
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/90-kubelet.conf
    state: present
    reload: true
  loop:
    - { name: 'vm.panic_on_oom', value: '0' }
    - { name: 'vm.overcommit_memory', value: '1' }
    - { name: 'kernel.panic', value: '10' }
    - { name: 'kernel.panic_on_oops', value: '1' }
  when: k3s_protect_kernel_defaults | bool

- name: Create config directory
  ansible.builtin.file:
    path: /etc/rancher/k3s
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Create config file
  ansible.builtin.template:
    src: config.yaml.j2
    dest: /etc/rancher/k3s/config.yaml
    owner: root
    group: root
    mode: "0600"

- name: Configure the k3s service
  ansible.builtin.template:
    src: k3s.service.j2
    dest: "{{ systemd_dir }}/k3s-node.service"
    owner: root
    group: root
    mode: "0755"

- name: Manage k3s service
  ansible.builtin.systemd:
    name: k3s-node
    daemon_reload: true
    state: restarted
    enabled: true
